#!/usr/bin/env python
PACKAGE = "hector_five_pipes_detection"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("priorityRGBD", int_t, 0, "priority of pointclouds from RGBD if available", 2, 0, 2)
gen.add("priorityLIDAR", int_t, 0, "priority of pointclouds from LIDAR if available", 1, 0, 2)
gen.add("x_min_dist_BB", double_t, 0, "the min distance in front of robot for ROI BB", 0.1, -10, 10)
gen.add("x_max_dist_BB", double_t, 0, "the max distance in front of robot for ROI BB", 1.4, -10, 10)
gen.add("y_tolarance_BB", double_t, 0, "tolarance value for ROI BB", 0.4, 0, 10)
gen.add("z_min_dist_BB", double_t, 0, "the min distance above the robot for ROI BB", 0.1, 0, 0.8)
gen.add("z_max_dist_BB", double_t, 0, "the max distance above the of robot for ROI BB", 1.2, 0, 2)
gen.add("planeSegDistTresh", double_t, 0, "planeSegDistTresh", 0.015, 0, 1)
gen.add("numberPointsThresh", double_t, 0, "numberPointsThresh", 7000, 1, 10000)
gen.add("clusterTolerance", double_t, 0, "clusterTolerance", 0.03, 0, 1)
gen.add("minClusterSize", double_t, 0, "minClusterSize", 1000, 1, 10000)
gen.add("maxClusterSize", double_t, 0, "maxClusterSize", 7000, 1, 10000)
gen.add("searchRadius", double_t, 0, "searchRadius for 5pipe detection", 0.2, 0, 1)
gen.add("do_min_cluster_radius", bool_t, 0, "Apply min cluster radius", False)
gen.add("min_cluster_radius", double_t, 0, "Minimum distance between two cluster centers", 0.05, 0, 0.1)
gen.add("doFilterCloud_pre_plane", bool_t, 0, "doFilterCloud", False)
gen.add("filter_cloud_n_neighbors_pre_plane", double_t, 0, "input cloud filter with n neighbors", 50, 1, 1000)
gen.add("filter_cloud_max_stdev_pre_plane", double_t, 0, "input cloud filter max standard deviation to neighbors", 0, 0, 25)
gen.add("doFilterCloud_post_plane", bool_t, 0, "doFilterCloud", False)
gen.add("filter_cloud_n_neighbors_post_plane", double_t, 0, "input cloud filter with n neighbors", 50, 1, 1000)
gen.add("filter_cloud_max_stdev_post_plane", double_t, 0, "input cloud filter max standard deviation to neighbors", 0, 0, 25)

exit(gen.generate(PACKAGE, "hector_five_pipes_detection_node", "HectorFivePipesDetection"))
